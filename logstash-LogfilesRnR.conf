input 
{
	file 
	{
		path => "C:\Temp\Logs\RnR\ApiLog.log"
		type => "log4net"
		start_position => beginning
		ignore_older => 0
		sincedb_path => "NUL"
		codec => multiline 
			{
				pattern => "^%{TIMESTAMP_ISO8601} "
				negate => true
				what => "previous"
			}
	}
}

filter 
{
	if [type] == "log4net" 
	{
		grok 
		{
			match => [
			"message", 
			"(?m)%{TIMESTAMP_ISO8601:_TimeStamp} %{NOTSPACE:Thread} %{LOGLEVEL:LogLevel}  %{DATA:Logger} - %{DATA:LogMessage} / %{IPORHOST:HostName} %{IP:HosIp} / %{GREEDYDATA:Agent}",
			"message",
			"(?m)%{TIMESTAMP_ISO8601:_TimeStamp} \[%{NUMBER:ThreadId}\] %{LOGLEVEL:LogLevel} %{DATA:Logger} - %{DATA:ExceptionType}\swith\sID:\s%{DATA:ID}(\s|\r)%{GREEDYDATA:LogMessage}",
			"message",
			"(?m)%{TIMESTAMP_ISO8601:_TimeStamp} %{NOTSPACE:Thread} %{LOGLEVEL:LogLevel} %{DATA:Logger} - %{GREEDYDATA:LogMessage}"]
		}
		date
		{
			match => ["_TimeStamp", "ISO8601"]
			target => "@timestamp"
			add_tag => [ "tmatch" ]
		}
		if !("_grokparsefailure" in [tags])
		{
		mutate {
			remove_field => [ "_TimeStamp" ]
			remove_field => [ "host" ]
			}
		}
	}
}

output 
{
	elasticsearch { hosts => ["localhost:9200"] }
	stdout { codec => rubydebug }
}